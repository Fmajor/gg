#!/bin/bash
#
#         (__)                     gg
#         (oo)
#   /------\/               Distributed under
#  / |    ||             the GNU GPL v3 License
# *  /\---/\
#    ~~   ~~               http://www.gnu.org
#
#
# 2014-08-02
#
# Author: wujinnnnn@gmail.com
installPath=/usr/local/bin/gg
source $installPath/gg-functions
testClear

get_currentBranch
thisBranchName=$currentBranch
get_currentBranchType
if [[ $currentBranchType != 'basedOn' ]]; then
	printf "\nYou must be in the basedOn branch to select a soft to use!\n\n"
	git status
	exit 1
fi

get_master
if [[ $# == 0 ]];then	
	git checkout $master
	get_currentTagName
	if [[ -z $currentTagName ]]; then
	    echo "$master don't have a tag name, you should give one to it"
	    git status
	    exit 1
	fi
	git checkout $thisBranchName
	printf "Do you what to select the latest version soft in the $master branch like this?\n"
	gggttt;echo "rm *"
	echo "==========================================================================="
	gggttt;echo "    Warning: make sure rm * will NOT remove your .git directory and other hiden files in case you use some alias!!"
	echo "==========================================================================="
	gggttt;echo "git commit -a -m \"fork $master into baseOn, version $currentTagName\""
	gggttt;echo "git merge --ff --squash $master"
	gggttt;echo "git add ."
	gggttt;echo "git commit --amend -m \"fork $master into baseOn, tagged $currentTagName\""
	gggttt;echo "git tag inUse-$currentTagName -a -m \"fork $1 into baseOn\""
	echo "press ENTER to continue, press Ctrl+C to ESCAPE"

	read temp
	
	get_now
	cp -r .git ../gg-backups-$now
	echo "backup .git to ../gg-backups-$now, if there is no error, you can delete the bakup file any time"
	rm *
	git commit -a -m "fork $master into baseOn, version $currentTagName"
	git merge --ff --squash $master
	git add .
	git commit --amend -m "fork $master into baseOn, tagged inUse-$currentTagName"
	git tag inUse-$currentTagName -a -m "fork $1 into baseOn"
else
	printf "error parameter numbers!!\n"
	exit 1
fi
