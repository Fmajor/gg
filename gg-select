#!/bin/bash
#
#         (__)                     gg
#         (oo)
#   /------\/               Distributed under
#  / |    ||             the GNU GPL v3 License
# *  /\---/\
#    ~~   ~~               http://www.gnu.org
#
#
# 2014-08-02
#
# Author: wujinnnnn@gmail.com
installPath=/usr/local/bin
source $installPath/gg-functions

get_currentBranch
get_currentBranchType
if [ $currentBranchType != 'basedOn' ]; then
	printf "\nYou must be in the basedOn branch to select a soft to use!\n\n"
	git status
	exit 1
fi

get_master
if [ $# == 0 ];then	
	git checkout $master
	get_currentTagName
	if [ -z $currentTagName ]; then
	    printf "$master don't have a tag name, you should give one to it\n"
	    git status
	    exit 1
	fi

	printf "Do you what to select the latest version soft in the $master branch like this?\n"
	printf "\tgit merge --no-ff $master\n"
	printf "\ttag inUse-$currentTagName -a -m ""fork $master into baseOn, version $currentTagName$""\n"
	read temp
	git checkout $currentBranch
	git merge --no-ff $master
	git tag inUse-$currentTagName -a -m "fork $master into baseOn, version $currentTagName$"
elif [ $# == 1 ]
	
	git checkout $1 \
		|| printf "error go to $#\n check your spell\n We can go to \n" \
		&& git branch \
		&& git tag \
		&& exit 1

	get_currentTagName
	if [ -z $currentTagName ]; then
	    printf "$1 don't have a tag name, you should give one to it\n"
	    git status
	    exit 1
	fi
	printf "Do you what to select the latest version soft in the $1 branch like this?\n"
	printf "\tgit merge --no-ff $1\n"
	printf "\tgit tag inUse-$currentTagName -a -m ""fork $1 into baseOn, version $currentTagName$""\n"

	read temp
	git checkout $currentBranch
	git merge --no-ff $1
	git tag inUse-$currentTagName -a -m "fork $1 into baseOn, version $currentTagName$"
else
	printf "error parameter numbers!!\n"
	exit 1
fi
